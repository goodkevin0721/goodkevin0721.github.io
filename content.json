{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"关于","date":"2024-01-06T03:53:25.512Z","updated":"2023-03-04T10:38:31.976Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"404 Not Found：该页无法显示","date":"2024-01-06T03:53:13.421Z","updated":"2023-03-04T10:38:31.975Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"友情链接","date":"2024-01-06T03:52:54.304Z","updated":"2023-03-04T10:38:31.977Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2023-03-04T10:38:31.976Z","updated":"2023-03-04T10:38:31.976Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"书单","date":"2024-01-06T03:53:34.483Z","updated":"2023-03-04T10:38:31.976Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2024-01-06T03:53:01.602Z","updated":"2023-03-04T10:38:31.977Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-01-06T03:53:06.949Z","updated":"2023-03-04T10:38:31.978Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Unity之ChatGPT提问","slug":"ChatGPT","date":"2024-01-06T04:18:00.296Z","updated":"2024-01-06T04:55:29.354Z","comments":true,"path":"2024/01/06/ChatGPT/","link":"","permalink":"http://example.com/2024/01/06/ChatGPT/","excerpt":"","text":"Unity中normalized的含义及用途 今天偶然发现一个不用账号也可以使用ChatGPT的网站，就问了几个关于normalized的问题，也顺便让自己深刻理解向量归一化用途，感觉真的是太强大了，以下是我提的问题。 问题1.Unity normalized 的意思是什么 回答： Unity中的normalized属性通常指的是Vector（向量）的单位向量，也称为标准化向量。 单位向量是指在长度为1的情况下，与相应向量方向相同的向量。在Unity中，通过将向量除以其长度来获得单位向量，即： normalizedVector = vector / vector.magnitude 标准化向量在计算、绘图和游戏开发等领域中经常使用，因为它们可以使计算更加准确，并且在方向表示和动画中非常有用。 问题2.vector.magnitude 的意思什么 回答： 在Unity中，向量（Vector）是指在n维空间中表示大小和方向的实体。一个向量可以用其X、Y和Z分量表示。 而向量的magnitude属性是指其长度或大小。在三维空间中，一个向量的大小可以用勾股定理计算，即对其三个分量的平方求和，再求平方根。 在Unity中，可以使用向量的magnitude属性获得其大小，即： float size = vector.magnitude; 此外，Unity中还提供了向量长度平方的sqrMagnitude属性，可以用来比magnitude属性更快地计算向量大小（省去平方根的开销），即： float sizeSquared = vector.sqrMagnitude; 问题3.normalized 什么情况下使用呢 回答： 在Unity中，正常情况下，使用向量（Vector）进行计算时，将它们变成单位向量（即normalized）是很常见的。这是因为单位向量具有方向，但是长度为1。这在进行方向表示、运动控制、动画过渡等方面是非常有用的。 以下是一些使用normalized向量的例子： 1.方向表示：将目标位置向量减去当前位置向量，得到指向目标的方向向量，然后归一化将其转换为单位向量，表示方向。 2.运动控制：使用方向向量控制物体的移动方向，并使用normalized向量进行平滑缓动。 3.碰撞检测：检查两个对象间的距离和方向，使用normalized向量表示方向，以便判断两个对象的相对方向。 4.绘图：使用normalized向量替代未归一化的向量进行绘图，提高图像质量。 总之，在需要使用方向向量、运动计算、碰撞检测、绘图等情况下，将向量归一化为单位向量是非常有用的。 问题4.那normalized向量进行平滑缓动 的代码实现 回答： 直接上图了 代码如下： 123456789101112131415161718192021222324252627public class SmoothMove : MonoBehaviour&#123; public Transform target; // 目标物体 public float speed = 5.0f; // 移动速度 public float smoothTime = 0.3f; // 平滑时间 private Vector3 velocity = Vector3.zero; // 速度 void Update() &#123; // 获取目标位置 Vector3 targetPosition = target.position; // 获取当前位置和目标位置的向量差，即移动方向 Vector3 moveDirection = (targetPosition - transform.position).normalized; // 使用SmoothDamp函数使向量平滑缓动 Vector3 smoothedDirection = Vector3.SmoothDamp(transform.forward, moveDirection, ref velocity, smoothTime); // 让物体面向平滑缓动后的方向 transform.forward = smoothedDirection; // 使用Lerp函数使物体平移 transform.position = Vector3.Lerp(transform.position, targetPosition, speed * Time.deltaTime); &#125;&#125; 运行效果： 问题5.那说下第三个例子 碰撞检测 的代码实现 回答： 运行效果： 注意： 这个例子用的是大写Normalized，它是一个方法会改变原来的向量，normalized是一个属性，不会改变原来的向量，会返回一个新的向量 代码逻辑说明： 自己向目标发射了一个射线，中间有其他物体的话，会挡住射线，认为没有碰撞到。 问题6.那第四个例子 怎么提高绘图质量呢 回答： 链接: link （还能不能用，只能自己去试试了）","categories":[],"tags":[]}],"categories":[],"tags":[]}